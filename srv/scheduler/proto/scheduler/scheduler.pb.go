// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: proto/scheduler/scheduler.proto

package scheduler

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NextSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuncName      string `protobuf:"bytes,1,opt,name=funcName,proto3" json:"funcName,omitempty"`
	ScheduledTime int64  `protobuf:"varint,2,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"`
}

func (x *NextSchedule) Reset() {
	*x = NextSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scheduler_scheduler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextSchedule) ProtoMessage() {}

func (x *NextSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_scheduler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextSchedule.ProtoReflect.Descriptor instead.
func (*NextSchedule) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *NextSchedule) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *NextSchedule) GetScheduledTime() int64 {
	if x != nil {
		return x.ScheduledTime
	}
	return 0
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuncName string `protobuf:"bytes,1,opt,name=funcName,proto3" json:"funcName,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scheduler_scheduler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_scheduler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Task    *NextSchedule `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scheduler_scheduler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_scheduler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Response) GetTask() *NextSchedule {
	if x != nil {
		return x.Task
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scheduler_scheduler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_scheduler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type Evt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	SentTime string `protobuf:"bytes,2,opt,name=sentTime,proto3" json:"sentTime,omitempty"`
	Msg      string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Evt) Reset() {
	*x = Evt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scheduler_scheduler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Evt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evt) ProtoMessage() {}

func (x *Evt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_scheduler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evt.ProtoReflect.Descriptor instead.
func (*Evt) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *Evt) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Evt) GetSentTime() string {
	if x != nil {
		return x.SentTime
	}
	return ""
}

func (x *Evt) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Level    int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	SentTime string `protobuf:"bytes,3,opt,name=sentTime,proto3" json:"sentTime,omitempty"`
	Msg      string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scheduler_scheduler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_scheduler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *Log) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Log) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Log) GetSentTime() string {
	if x != nil {
		return x.SentTime
	}
	return ""
}

func (x *Log) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_proto_scheduler_scheduler_proto protoreflect.FileDescriptor

var file_proto_scheduler_scheduler_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e,
	0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x22, 0x50, 0x0a, 0x0c, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e,
	0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40,
	0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73,
	0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x4e, 0x65,
	0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x22, 0x33, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x45, 0x0a, 0x03, 0x45, 0x76, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5b, 0x0a, 0x03,
	0x4c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xe1, 0x04, 0x0a, 0x09, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x04, 0x4f, 0x6e, 0x63, 0x65, 0x12,
	0x27, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66,
	0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a,
	0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x2e, 0x73, 0x69, 0x64, 0x61,
	0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32,
	0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x27, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e,
	0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x69, 0x64, 0x61,
	0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61,
	0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66,
	0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x2e, 0x73, 0x69, 0x64, 0x61,
	0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32,
	0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x09, 0x44, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x27, 0x2e, 0x73, 0x69,
	0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x69, 0x64, 0x61, 0x7a, 0x68, 0x61, 0x6e, 0x67,
	0x31, 0x32, 0x33, 0x2e, 0x66, 0x31, 0x30, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x42, 0x11, 0x5a,
	0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_scheduler_scheduler_proto_rawDescOnce sync.Once
	file_proto_scheduler_scheduler_proto_rawDescData = file_proto_scheduler_scheduler_proto_rawDesc
)

func file_proto_scheduler_scheduler_proto_rawDescGZIP() []byte {
	file_proto_scheduler_scheduler_proto_rawDescOnce.Do(func() {
		file_proto_scheduler_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_scheduler_scheduler_proto_rawDescData)
	})
	return file_proto_scheduler_scheduler_proto_rawDescData
}

var file_proto_scheduler_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_scheduler_scheduler_proto_goTypes = []interface{}{
	(*NextSchedule)(nil), // 0: sidazhang123.f10.srv.scheduler.NextSchedule
	(*Request)(nil),      // 1: sidazhang123.f10.srv.scheduler.Request
	(*Response)(nil),     // 2: sidazhang123.f10.srv.scheduler.Response
	(*Error)(nil),        // 3: sidazhang123.f10.srv.scheduler.Error
	(*Evt)(nil),          // 4: sidazhang123.f10.srv.scheduler.Evt
	(*Log)(nil),          // 5: sidazhang123.f10.srv.scheduler.Log
}
var file_proto_scheduler_scheduler_proto_depIdxs = []int32{
	3, // 0: sidazhang123.f10.srv.scheduler.Response.error:type_name -> sidazhang123.f10.srv.scheduler.Error
	0, // 1: sidazhang123.f10.srv.scheduler.Response.task:type_name -> sidazhang123.f10.srv.scheduler.NextSchedule
	1, // 2: sidazhang123.f10.srv.scheduler.Scheduler.Once:input_type -> sidazhang123.f10.srv.scheduler.Request
	1, // 3: sidazhang123.f10.srv.scheduler.Scheduler.NextScheduledTask:input_type -> sidazhang123.f10.srv.scheduler.Request
	1, // 4: sidazhang123.f10.srv.scheduler.Scheduler.UpdateSchedule:input_type -> sidazhang123.f10.srv.scheduler.Request
	1, // 5: sidazhang123.f10.srv.scheduler.Scheduler.ClearSchedule:input_type -> sidazhang123.f10.srv.scheduler.Request
	1, // 6: sidazhang123.f10.srv.scheduler.Scheduler.RemoveTask:input_type -> sidazhang123.f10.srv.scheduler.Request
	1, // 7: sidazhang123.f10.srv.scheduler.Scheduler.DingAlarm:input_type -> sidazhang123.f10.srv.scheduler.Request
	2, // 8: sidazhang123.f10.srv.scheduler.Scheduler.Once:output_type -> sidazhang123.f10.srv.scheduler.Response
	2, // 9: sidazhang123.f10.srv.scheduler.Scheduler.NextScheduledTask:output_type -> sidazhang123.f10.srv.scheduler.Response
	2, // 10: sidazhang123.f10.srv.scheduler.Scheduler.UpdateSchedule:output_type -> sidazhang123.f10.srv.scheduler.Response
	2, // 11: sidazhang123.f10.srv.scheduler.Scheduler.ClearSchedule:output_type -> sidazhang123.f10.srv.scheduler.Response
	2, // 12: sidazhang123.f10.srv.scheduler.Scheduler.RemoveTask:output_type -> sidazhang123.f10.srv.scheduler.Response
	3, // 13: sidazhang123.f10.srv.scheduler.Scheduler.DingAlarm:output_type -> sidazhang123.f10.srv.scheduler.Error
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_scheduler_scheduler_proto_init() }
func file_proto_scheduler_scheduler_proto_init() {
	if File_proto_scheduler_scheduler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_scheduler_scheduler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scheduler_scheduler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scheduler_scheduler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scheduler_scheduler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scheduler_scheduler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Evt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scheduler_scheduler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_scheduler_scheduler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_scheduler_scheduler_proto_goTypes,
		DependencyIndexes: file_proto_scheduler_scheduler_proto_depIdxs,
		MessageInfos:      file_proto_scheduler_scheduler_proto_msgTypes,
	}.Build()
	File_proto_scheduler_scheduler_proto = out.File
	file_proto_scheduler_scheduler_proto_rawDesc = nil
	file_proto_scheduler_scheduler_proto_goTypes = nil
	file_proto_scheduler_scheduler_proto_depIdxs = nil
}
